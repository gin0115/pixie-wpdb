name: GitHub_CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['7.1', '7.2', '7.3', '7.4']
        mysql-versions: ['mysql:5.7', 'mysql:8.0', 'mariadb:10.4']
    runs-on: ${{ matrix.operating-system }}
    services:
      # Setup MYSQL
      mysql-service:
        image: ${{ matrix.mysql-versions }}
        env:
          MYSQL_ROOT_PASSWORD: 'crab'
          MYSQL_DATABASE: pc_core_tests
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
  
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl, pcov
          ini-values: post_max_size=256M, log_errors=1
          tools: pecl

      # Set auth mode for MYSQL 5.8
      - name: Set MYSQL Auth to password bassed
        # run: '--default-authentication-plugin=mysql_native_password'
        # run: 'mysql --host mysql --port 3306 -u root -p crab -e "SHOW DATABASES"'
        if: matrix.mysql-versions == 'mysql:8.0'

      - name: Set environment variables
        run: echo "MYSQL_AUTHENTICATION_PLUGIN = mysql_native_password" >> $GITHUB_ENV
        if: matrix.mysql-versions == 'mysql:8.0'

      - name: Check PHP Version
        run: php -v

      - name: Clear existing composer
        run: rm -rf wordpress && rm -rf vendor && rm -rf composer.lock 

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        run: composer clearcache && rm -rf composer.lock && composer install --prefer-dist --no-suggest

      - name: Run Tests
        env:
          environment_github: true
        run: composer all

      - name: Codecov
        run: bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_PIXIE }}

      